{"version":3,"sources":["angular-egg.js"],"names":["angular","__toCharCodes","keys","special","up","down","left","right","enter","space","ctrl","alt","tab","specialKeys","Object","split","map","key","trim","characterKeyCodes","isNaN","parseInt","indexOf","charCodeAt","join","ngEgg","$document","link","scope","elem","attrs","ngModelCtrl","handleEvent","e","foundEgg","keyCode","which","isLetter","type","metaKey","ctrlKey","altKey","shiftKey","tag","target","tagName","preventDefault","ignoredKeys","kps","push","toString","activeEgg","css","$apply","$setViewValue","length","currentKeys","firstEggKey","substr","keycode","defaultEgg","on","restrict","require","$inject","module","directive","window"],"mappings":"CAwBA,SAAUA,GAER,YAiBA,SAASC,GAAcC,GACrB,GAAIC,IACAC,GAAM,GAAIC,KAAQ,GAAIC,KAAQ,GAAIC,MAAS,GAAIC,MAAS,GAAIC,MAAS,GAAIC,KAAQ,EAAGC,IAAO,EAAGC,IAAO,GAEvGC,EAAcC,OAAOZ,KAAKC,EAE5BD,GAAOA,EAAKa,MAAM,KAAKC,IAAI,SAASC,GAClC,MAAOA,GAAIC,QAGb,IAAIC,GAAoBjB,EAAKc,IAAI,SAASC,GAExC,MAAKG,OAAMC,SAASJ,EAAK,KAIrBJ,EAAYS,QAAQL,GAAO,GACtBd,EAAQc,GAGV,EAAMM,WAAW,GAPfN,GAUX,OAAOE,GAAkBK,KAAK,KAahC,QAASC,GAAMC,GAiBb,QAASC,GAAKC,EAAOC,EAAMC,EAAOC,GAchC,QAASC,GAAYC,GAEnB,GAEEC,GAFEC,EAAWF,EAAEG,MACfC,EAAWF,GAAW,IAAiB,IAAXA,CAG9B,MAAe,YAAXF,EAAEK,MAAuBL,EAAEM,SAAYN,EAAEO,SAAYP,EAAEQ,QAAWR,EAAES,UAAU,CAChF,GAAIC,GAAMV,EAAEW,OAAOC,OAEnB,KAAa,SAARF,GAA0B,SAARA,IAAmBN,EAExC,WADAJ,GAAEa,iBAKN,GAAe,UAAXb,EAAEK,KAWJ,GAVID,IAAaJ,EAAES,WACjBP,GAAoB,IAGe,KAAjCY,EAAYzB,QAAQa,IACtBa,EAAIC,KAAKd,GAGXD,EAAWc,EAAIE,WAAW5B,QAAQ6B,IAAc,EAG9CH,KACAnB,EAAKuB,IAAI,UAAW,SACpBxB,EAAMyB,OAAO,WACXtB,EAAYuB,eAAc,SAGzB,IAAIN,EAAIO,OAAS,GAAI,CAExB,GAAIC,GAAcR,EAAIE,WACpBO,EAAcN,EAAUpC,MAAM,KAAK,EAEhC0C,IAAoD,KAArCD,EAAYlC,QAAQmC,IAItCD,EAAcA,EAAYE,OAAOF,EAAYlC,QAAQmC,IACjDD,EAAYD,OAASJ,EAAUI,SACjCP,OALFA,MAnDRjB,EAAYuB,eAAc,GAC1BzB,EAAKuB,IAAI,UAAW,QA+DlBD,EAAYlD,EADV6B,EAAM6B,QACkB7B,EAAM6B,QAGNC,GAG5BlC,EAAUmC,GAAG,UAAW7B,GACxBN,EAAUmC,GAAG,QAAS7B,GAxFxB,GACEmB,GADEH,IA2FJ,QACEc,SAAU,KACVC,QAAS,WACTnC,OAAO,EACPD,KAAMA,GAnJV,GAAIiC,GAAa,0CACfb,GAAe,GAqJjBtB,GAAMuC,SAAW,aAEjBhE,EACGiE,OAAO,YACPC,UAAU,QAASzC,IAErB0C,OAAOnE","file":"angular-egg.min.js","sourcesContent":["/*\n ngEgg - Copyright (c)  2015 Scriptwerx\n\n An AngularJS Directive implementation of egg.js by Mike Flynn\n https://github.com/mikeflynn/egg.js/blob/master/egg.js\n\n Copyright (c) 2015 Mike Flynn\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n(function(angular) {\n\n  'use strict';\n\n  // Default (Konami) keycode\n  var defaultEgg = '38,up,40,down,left,right,left,right,b,a',\n    ignoredKeys = [16];\n\n  /**\n   * @private\n   * @ngdoc method\n   * @methodOf ngEgg\n   * @name __toCharCodes\n   * @description\n   * Converts literal character values to keyCodes\n   *\n   * @param {String} keys keycode String\n   * @returns {String} Reformatted keycode String\n   */\n  function __toCharCodes(keys) {\n    var special = {\n        'up': 38, 'down': 40, 'left': 37, 'right': 39, 'enter': 13, 'space': 32, 'ctrl': 7, 'alt': 8, 'tab': 9\n      },\n      specialKeys = Object.keys(special);\n\n    keys = keys.split(',').map(function(key) {\n      return key.trim();\n    });\n\n    var characterKeyCodes = keys.map(function(key) {\n\n      if (!isNaN(parseInt(key, 10))) {\n        return key;\n      }\n\n      if (specialKeys.indexOf(key) > -1) {\n        return special[key];\n      }\n\n      return (key).charCodeAt(0);\n    });\n\n    return characterKeyCodes.join(',');\n  }\n\n  /**\n   * @ngdoc directive\n   * @name ngEgg\n   * @description\n   *\n   * @requires $document\n   *\n   * @param {Object} $document $document\n   * @returns {Object} Directive Object\n   */\n  function ngEgg($document) {\n\n    var kps = [],\n      activeEgg;\n\n    /**\n    * @private\n    * @ngdoc method\n    * @methodOf ngEgg\n    * @name link\n    * @description\n    * \n    * @param {Object} scope $scope\n    * @param {Object} elem DOM Element\n    * @param {Object} attrs Attributes\n    * @param {Object} ngModelCtrl ngModelController\n    */\n    function link(scope, elem, attrs, ngModelCtrl) {\n\n      ngModelCtrl.$setViewValue(false);\n      elem.css('display', 'none');\n\n      /**\n       * @private\n       * @ngdoc method\n       * @methodOf ngEgg\n       * @name handleEvent\n       * @description\n       * \n       * @param {Object} e Event Object\n       */\n      function handleEvent(e) {\n\n        var keyCode  = e.which,\n          isLetter = keyCode >= 65 && keyCode <= 90,\n          foundEgg;\n\n        if (e.type === 'keydown' && !e.metaKey && !e.ctrlKey && !e.altKey && !e.shiftKey) {\n          var tag = e.target.tagName;\n\n          if ((tag === 'HTML' || tag === 'BODY') && isLetter) {\n            e.preventDefault();\n            return;\n          }\n        }\n\n        if (e.type === 'keyup') {\n          if (isLetter && !e.shiftKey) {\n            keyCode = keyCode + 32;\n          }\n\n          if (ignoredKeys.indexOf(keyCode) === -1) {\n            kps.push(keyCode);\n          }\n\n          foundEgg = kps.toString().indexOf(activeEgg) >= 0;\n\n          if (foundEgg) {\n            kps = [];\n            elem.css('display', 'block');\n            scope.$apply(function() {\n              ngModelCtrl.$setViewValue(true);\n            });\n          }\n          else if (kps.length > 10) {\n\n            var currentKeys = kps.toString(),\n              firstEggKey = activeEgg.split(',')[0];\n\n            if (!firstEggKey || currentKeys.indexOf(firstEggKey) === -1) {\n              kps = [];\n            }\n            else {\n              currentKeys = currentKeys.substr(currentKeys.indexOf(firstEggKey));\n              if (currentKeys.length > activeEgg.length) {\n                kps = [];\n              }\n            }\n          }\n        }\n      }\n\n      if (attrs.keycode) {\n        activeEgg = __toCharCodes(attrs.keycode);\n      }\n      else {\n        activeEgg = __toCharCodes(defaultEgg);\n      }\n\n      $document.on('keydown', handleEvent);\n      $document.on('keyup', handleEvent);\n    }\n\n    return {\n      restrict: 'EA',\n      require: '^ngModel',\n      scope: true,\n      link: link\n    };\n  }\n  ngEgg.$inject = ['$document'];\n\n  angular\n    .module('ngEgg', [])\n    .directive('ngEgg', ngEgg);\n\n})(window.angular);"],"sourceRoot":"/source/"}